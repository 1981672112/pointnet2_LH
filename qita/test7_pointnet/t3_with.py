# r w a + x b t
# r+：以可读写的方式打开文本文件，文件必须存在；
# w+：以可读写的方式打开文本文件，其他与w一样； 会清除文件原有的内容
# a+：以可读写的方式打开文本文件，其他与a一样；
# 若打开二进制文件，可在后面加个b注明，其他一样，如rb，r+b（或rb+）
""" 1 'w'
打开一个文件只用于写入。
如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。
如果该文件不存在，创建新文件。
123
456
789
-----
147
‘w+’打开一个文件用于读写。
如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。
如果该文件不存在，创建新文件。
"""
# with open('./example.txt', 'w+') as f:
#     # f.write('147')  # 'w'把原来的内容删除了重写的
#     a = f.read()
#     print(a)  # 不管这个txt有没有内容，都不会读到内容，因为w+会清除文件的原始内容 前面加write也不会由内容读出来
"""
然而，需要注意的是，在使用 'w+' 模式时，写入操作会将文件截断为零长度，然后再写入数据。
因此，在写入 '147' 之后，文件内容变为 '147'，并且文件指针已经在文件的末尾。
当你尝试读取文件内容时，由于文件指针已经在末尾，读取操作不会返回任何数据。
因此，a 变量实际上是一个空字符串，因为读取的位置在文件末尾。
"""

"""2 'r' a和a+
以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
"""
# with open('./example.txt', 'a+') as f:
#     a1 = f.read()
#     print(a1)
#     f.write('456')
"""
使用'a'的话 a1 = f.read()
io.UnsupportedOperation: not readable
使用 'a+' 模式打开文件。'a+' 模式表示以追加和读取的模式打开文件。
然而，需要注意的是，在追加模式下，文件指针会被设置到文件的末尾，因此在读取之前，文件指针已经在文件的末尾。
因此，当你尝试读取文件内容时，
由于文件指针在文件末尾，读取操作将返回一个空字符串，
因为没有更多的内容可读。
"""

"""3 'r+'

"""
# with open('./example.txt', 'r+') as f:
#     a1 = f.read()
#     print(a1)
#     f.write('456')
#     print(a1)
"""
123
123
不会把456读出来
使用 'r+' 模式打开文件。'r+' 模式表示以读取和写入的模式打开文件。
然而，需要注意的是，在读取之后，文件指针已经在文件的末尾，
所以当你尝试在文件末尾写入 '456' 时，实际上是在已有内容的后面进行写入。
由于文件指针在末尾，第二个 print(a1) 语句之前的写入操作不会改变 a1 变量中的内容，
因此仍然打印读取的内容。
"""

""" 4 读取后追加写入，并查看追加后的内容
如果你想要在读取后追加写入，并查看追加后的内容，
你需要在写入之前使用 seek 将文件指针移动到文件的末尾。
这样写入的内容将添加到已有内容的末尾。
"""
# with open('./example.txt', 'r+') as f:
#     a1 = f.read()
#     print(a1)
#
#     f.seek(0, 2)  # 将文件指针移动到文件的末尾
#     f.write('456')  # 在文件末尾追加写入
#
#     f.seek(0)  # 将文件指针移动到文件的开头
#     a2 = f.read()  # 重新读取整个文件
#     print(a2)
